<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tao.authenticateservice.repository.UserRepository">

    <select id="findAllUsers" resultType="user">
      select id, username, phonenumber, gender, active, age,
      created_at as createdAt, updated_at as updatedAt, avatar
      from t_user
    </select>

    <select id="countUsers" resultType="long">
      select count(*) from t_user
    </select>

    <select id="findUsers" resultType="user">
      select id, username, phonenumber, gender, active, age,
      created_at as createdAt, updated_at as updatedAt, avatar
      from t_user
      <where>
        <if test="name != null">
          and username like concat('%', #{name}, '%')
        </if>
      </where>
      limit #{page.offset}, #{page.limit}
    </select>

    <select id="findUserById" parameterType="long" resultType="user">
      select id, username, phonenumber, gender, active, age,
      created_at as createdAt, updated_at as updatedAt, avatar,
      password_digest as passwordDigest
      from t_user where id = #{id}
    </select>

    <select id="findUserByPhonenumber" parameterType="String" resultType="user">
      select id, username, phonenumber, gender, active, age,
      created_at as createdAt, updated_at as updatedAt, avatar,
      password_digest as passwordDigest
      from t_user where phonenumber = #{phonenumber}
    </select>

    <select id="findUserByUsername" parameterType="String" resultType="user">
      select id, username, phonenumber, gender, active, age,
      created_at as createdAt, updated_at as updatedAt, avatar,
      password_digest as passwordDigest
      from t_user where username = #{username}
    </select>

    <update id="updateUserProfile">
      update t_user set username = #{name}, avatar = #{avatar} where id = #{id}
    </update>

    <update id="activeUser" parameterType="long">
      update t_user set active = '1' where id = #{id}
    </update>

    <update id="deactiveUser" parameterType="long">
      update t_user set active = '0' where id = #{id}
    </update>

    <insert id="addRole">
      insert into t_user_role( user_id, role_id)
      values (#{userId}, #{roleId})
    </insert>

    <delete id="removeRole" parameterType="long">
      delete from t_user_role where id = #{id}
    </delete>

    <select id="getRolesByUserId" resultType="userRole">
      select r.id as roleId, r.name as roleName, ur.id as id, u.id as userId
      from t_user u, t_user_role ur,  t_role r
      where ur.user_id = u.id and ur.role_id = r.id and u.id = #{id}
    </select>



    <sql id="userCols">
      id, username, phonenumber, password_digest, age, active, gender, avatar 
    </sql>

    <resultMap id="userMap" type="user">
      <id property="id" column="id" />
      <result property="username" column="username" />
      <result property="phonenumber" column="phonenumber" />
      <result property="age" column="age" />
      <result property="password_digested" column="passwordDigested" />
      <result property="active" column="active" />
      <result property="gender" column="gender" />
      <result property="avatar" column="avatar" />
    </resultMap>

    <insert id="addUser" useGeneratedKeys="true"
      keyProperty="id" parameterType="user">
      insert into t_user (<include refid="userCols" />)
      values ( #{id}, #{username}, #{phonenumber}, #{passwordDigest}, #{age}, #{active}, #{gender}, #{avatar} )
    </insert>

</mapper>